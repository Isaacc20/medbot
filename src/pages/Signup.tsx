import React from "react";
import { Box, Typography } from "@mui/material";
import './Signup.css'
import { useForm, SubmitHandler } from "react-hook-form";

type Inputs = {
  example: string
  exampleRequired: string
}

const Signup = () => {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>()
  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data)
  console.log(watch("example"))

  return (
    <>
      {/* <MainLayout> */}
      <Box sx={{ width: "100%" }}>
        <Typography>
          <div className="div d-flex align-items-center">
            <div className="container-sm d-flex flex-column gap-5 align-items-center text-center h-75">
              <svg width="172" height="48" viewBox="0 0 172 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="24" r="20" fill="#3F9FFF" />
                <path d="M72.724 38H61.96V36.632C62.44 36.392 62.908 36.188 63.364 36.02C63.82 35.852 64.312 35.708 64.84 35.588V20.54L65.02 16.328H64.732L63.544 20.18L56.596 38H54.94L48.028 20.324L46.732 16.112H46.408L46.444 20.684V35.444C46.9 35.54 47.404 35.696 47.956 35.912C48.508 36.128 49.024 36.368 49.504 36.632V38H40.72V36.632C41.104 36.44 41.572 36.212 42.124 35.948C42.7 35.684 43.24 35.504 43.744 35.408V15.212C43.264 15.116 42.748 14.984 42.196 14.816C41.668 14.648 41.2 14.432 40.792 14.168V12.8H50.548L56.056 27.452L57.1 30.908H57.136L58.216 27.38L63.832 12.8H72.76V14.168C72.352 14.408 71.908 14.624 71.428 14.816C70.972 14.984 70.504 15.116 70.024 15.212V35.624C70.528 35.72 71.008 35.864 71.464 36.056C71.944 36.248 72.364 36.44 72.724 36.632V38ZM90.9648 34.976C90.7728 35.384 90.4608 35.804 90.0288 36.236C89.6208 36.644 89.1048 37.016 88.4808 37.352C87.8808 37.664 87.1728 37.916 86.3568 38.108C85.5648 38.324 84.7008 38.432 83.7648 38.432C82.2768 38.432 80.9568 38.216 79.8048 37.784C78.6528 37.328 77.6928 36.692 76.9248 35.876C76.1568 35.036 75.5688 34.04 75.1608 32.888C74.7768 31.736 74.5848 30.44 74.5848 29C74.5848 25.928 75.3888 23.588 76.9968 21.98C78.6048 20.372 80.8368 19.568 83.6928 19.568C84.9168 19.568 86.0568 19.736 87.1128 20.072C88.1928 20.408 89.0808 20.96 89.7768 21.728C90.4968 22.496 90.9888 23.504 91.2528 24.752C91.5408 26 91.5288 27.524 91.2168 29.324H80.1648C80.1888 31.22 80.6688 32.732 81.6048 33.86C82.5648 34.988 83.9688 35.552 85.8168 35.552C86.6088 35.552 87.4248 35.432 88.2648 35.192C89.1288 34.952 89.8008 34.64 90.2808 34.256L90.9648 34.976ZM83.5488 21.62C83.0688 21.62 82.6368 21.704 82.2528 21.872C81.8928 22.04 81.5688 22.352 81.2808 22.808C81.0168 23.24 80.8008 23.84 80.6328 24.608C80.4648 25.352 80.3448 26.3 80.2728 27.452H86.0688C86.2368 25.58 86.1288 24.14 85.7448 23.132C85.3608 22.124 84.6288 21.62 83.5488 21.62ZM106.197 34.436C106.077 34.964 105.861 35.468 105.549 35.948C105.237 36.428 104.865 36.86 104.433 37.244C104.001 37.604 103.509 37.892 102.957 38.108C102.405 38.324 101.817 38.432 101.193 38.432C98.8167 38.432 97.0047 37.688 95.7567 36.2C94.5327 34.688 93.9207 32.384 93.9207 29.288C93.9207 27.704 94.1367 26.324 94.5687 25.148C95.0007 23.948 95.6007 22.94 96.3687 22.124C97.1607 21.308 98.1087 20.696 99.2127 20.288C100.317 19.88 101.541 19.676 102.885 19.676C103.317 19.676 103.677 19.688 103.965 19.712C104.277 19.736 104.553 19.772 104.793 19.82C105.057 19.844 105.297 19.904 105.513 20C105.753 20.072 106.017 20.156 106.305 20.252V13.916L103.569 13.628V12.224C103.905 12.08 104.361 11.948 104.937 11.828C105.537 11.708 106.161 11.6 106.809 11.504C107.457 11.384 108.093 11.276 108.717 11.18C109.341 11.084 109.857 11 110.265 10.928H111.489V35.444L113.865 35.732V36.992C113.529 37.16 113.097 37.316 112.569 37.46C112.041 37.604 111.489 37.736 110.913 37.856C110.337 37.976 109.773 38.072 109.221 38.144C108.693 38.24 108.249 38.312 107.889 38.36H106.665L106.341 34.436H106.197ZM102.921 35.552C103.761 35.552 104.469 35.288 105.045 34.76C105.621 34.232 106.041 33.332 106.305 32.06V22.376C105.993 22.184 105.597 22.028 105.117 21.908C104.661 21.788 104.085 21.728 103.389 21.728C101.997 21.728 101.001 22.364 100.401 23.636C99.8007 24.884 99.5007 26.708 99.5007 29.108C99.5007 31.052 99.7647 32.612 100.293 33.788C100.821 34.964 101.697 35.552 102.921 35.552ZM116.767 13.916L114.031 13.628V12.224C114.391 12.08 114.859 11.936 115.435 11.792C116.035 11.648 116.647 11.528 117.271 11.432C117.919 11.312 118.543 11.216 119.143 11.144C119.767 11.048 120.295 10.976 120.727 10.928H121.951V23.384H122.023C122.503 22.184 123.235 21.248 124.219 20.576C125.203 19.904 126.367 19.568 127.711 19.568C129.823 19.568 131.467 20.3 132.643 21.764C133.819 23.228 134.407 25.448 134.407 28.424C134.407 31.712 133.531 34.184 131.779 35.84C130.051 37.496 127.507 38.324 124.147 38.324C123.547 38.324 122.875 38.276 122.131 38.18C121.387 38.108 120.667 38.012 119.971 37.892C119.275 37.772 118.627 37.628 118.027 37.46C117.451 37.292 117.031 37.124 116.767 36.956V13.916ZM125.371 22.448C124.459 22.448 123.727 22.784 123.175 23.456C122.623 24.104 122.215 24.932 121.951 25.94V35.48C122.287 35.72 122.695 35.912 123.175 36.056C123.679 36.2 124.243 36.272 124.867 36.272C126.235 36.272 127.231 35.66 127.855 34.436C128.503 33.212 128.827 31.292 128.827 28.676C128.827 26.78 128.563 25.268 128.035 24.14C127.531 23.012 126.643 22.448 125.371 22.448ZM136.636 29C136.636 27.536 136.852 26.228 137.284 25.076C137.74 23.9 138.376 22.904 139.192 22.088C140.032 21.272 141.04 20.648 142.216 20.216C143.392 19.784 144.724 19.568 146.212 19.568C147.892 19.568 149.332 19.808 150.532 20.288C151.756 20.744 152.752 21.392 153.52 22.232C154.312 23.048 154.888 24.044 155.248 25.22C155.608 26.372 155.788 27.632 155.788 29C155.788 30.464 155.572 31.784 155.14 32.96C154.708 34.112 154.072 35.096 153.232 35.912C152.416 36.728 151.408 37.352 150.208 37.784C149.032 38.216 147.7 38.432 146.212 38.432C144.58 38.432 143.164 38.204 141.964 37.748C140.764 37.268 139.768 36.62 138.976 35.804C138.184 34.964 137.596 33.968 137.212 32.816C136.828 31.64 136.636 30.368 136.636 29ZM142.216 29C142.216 30.08 142.276 31.076 142.396 31.988C142.54 32.876 142.78 33.632 143.116 34.256C143.452 34.88 143.908 35.372 144.484 35.732C145.06 36.068 145.804 36.236 146.716 36.236C147.244 36.236 147.724 36.116 148.156 35.876C148.588 35.612 148.96 35.204 149.272 34.652C149.584 34.076 149.812 33.332 149.956 32.42C150.124 31.484 150.208 30.344 150.208 29C150.208 27.896 150.136 26.9 149.992 26.012C149.872 25.124 149.644 24.368 149.308 23.744C148.996 23.12 148.564 22.64 148.012 22.304C147.46 21.944 146.764 21.764 145.924 21.764C145.3 21.764 144.76 21.896 144.304 22.16C143.848 22.4 143.464 22.808 143.152 23.384C142.84 23.936 142.6 24.68 142.432 25.616C142.288 26.528 142.216 27.656 142.216 29ZM156.972 20.864C157.884 20.288 158.844 19.88 159.852 19.64V16.724C159.996 16.58 160.236 16.448 160.572 16.328C160.932 16.184 161.304 16.064 161.688 15.968C162.096 15.848 162.492 15.74 162.876 15.644C163.26 15.548 163.572 15.476 163.812 15.428H165.036V20H169.788V22.268H165.036V31.592C165.036 33.08 165.216 34.112 165.576 34.688C165.96 35.264 166.584 35.552 167.448 35.552C167.88 35.552 168.36 35.528 168.888 35.48C169.44 35.408 169.944 35.288 170.4 35.12L170.652 36.308C170.436 36.524 170.112 36.752 169.68 36.992C169.272 37.232 168.792 37.46 168.24 37.676C167.712 37.892 167.124 38.072 166.476 38.216C165.852 38.36 165.192 38.432 164.496 38.432C162.936 38.432 161.772 38.024 161.004 37.208C160.236 36.392 159.852 35.072 159.852 33.248V22.268H156.972V20.864Z" fill="#3F9FFF"/>
              </svg>
              <form onSubmit={handleSubmit(onSubmit)} className="form d-flex flex-column justify-content-center align-items-center gap-4 w-75" action="">
                <div className="input gap-2 d-flex flex-column align-items-start w-75 container">
                  <label className="text-black px-3" htmlFor="email">Enter email address</label>
                  <input className={errors.exampleRequired? "rounded-pill w-100 px-3 py-2 is-invalid": "rounded-pill w-100 px-3 py-2"} type="email" id="email" {...register("exampleRequired", {required: true})} placeholder="Enter your email address" />
                  {errors.exampleRequired && <span>This field is required</span>}
                </div>
                <div className="input gap-2 d-flex flex-column align-items-start w-75 container">
                  <label className="text-black px-3" htmlFor="number">Enter phone number</label>
                  <input className="rounded-pill w-100 px-3 py-2" type="number" id="number" placeholder="Enter phone number" />
                  {/* {errors.example && <span>This field is required</span>} */}
                </div>
                <div className="input gap-2 d-flex flex-column align-items-start w-75 container">
                  <label className="text-black px-3" htmlFor="password">Enter password</label>
                  <input className={errors.example? "rounded-pill w-100 px-3 py-2 is-invalid": "rounded-pill w-100 px-3 py-2"} type="password" id="password" {...register("example", {required: true})} placeholder="Enter password" />
                  {errors.example && <small className="text-danger">This field is required</small>}
                </div>
                <div className="input gap-2 d-flex flex-column align-items-start w-75 container">
                  <button className="rounded-pill w-100 px-3 py-2">Sign up</button>
                </div>
              </form>
            </div>
          </div>
        </Typography>
      </Box>
      {/* </MainLayout> */}
      {/* <div>
            

        </div> */}
    </>
  );
};

export default Signup;
